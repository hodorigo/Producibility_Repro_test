##New dataset with just the columns that I choose to work with
bromeliads_set_columns <- bm %>%
select(dataset_name, species,
max_water, num_leaf, longest_leaf)
##Check the dataset
head(bromeliads_set_columns)
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf )
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf, error_fun = error_append)
##Check the dataset
head(bromeliads_set_columns)
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf, error_fun = error_append)
View(bromeliads_messy)
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf, error_fun = success_continue)
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf)
bromeliads_posit_num <- bromeliads_set_columns %>%
mutate(longest_leaf = ifelse(longest_leaf < 0, -longest_leaf, longest_leaf)
,max_water = ifelse(max_water < 0, -max_water, max_water)
,num_leaf = ifelse(num_leaf < 0, -num_leaf, num_leaf))
##to test if is there any negative still
bromeliads_posit_num %>%
assert(within_bounds(0, Inf), max_water, num_leaf, longest_leaf)
### This is the working script to pontit out the potential outliers within 5mads, I could find reference stating that a large bromiliad could eventualy hold 4000ml of water in their leaves base, so I choose to
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(6), max_water, error_fun = error_append)
### This is the working script to pontit out the potential outliers within 5mads, I could find reference stating that a large bromiliad could eventualy hold 4000ml of water in their leaves base, so I choose to
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(5), max_water, error_fun = error_append)
### This is the working script to pontit out the potential outliers within 5mads, I could find reference stating that a large bromiliad could eventualy hold 4000ml of water in their leaves base, so I choose to
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(6), max_water, error_fun = error_append)
View(sds_check)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(6), max_water, error_fun = error_append)
View(sds_check)
outliers <- attributes(sds_check)$assertr_errors[[1]][["error_df"]][["value"]]
##Using mutate to change a cell with outliers
bromeliads_posit_num2 <- bromeliads_posit_num %>%
mutate(max_water = ifelse(max_water %in% outliers, NA, max_water))
rte <- bromeliads_posit_num %>%
insist(success_fun = success_append, error_fun = error_report, within_n_mads(5), c(num_leaf, max_water, longest_leaf))
summary(rt)
attributes(rt)
success_report(bromeliads_posit_num$max_water)
rt <- bromeliads_posit_num %>%
insist(error_fun = error_report, within_n_mads(5), c(num_leaf, max_water, longest_leaf))
summary(rt)
help("success_and_error_functions")
within_n_mads(1)(bromeliads_posit_num$max_water)
maha_dist(bromeliads_posit_num, keep.NA = FALSE)
maha_dist(bromeliads_posit_num, keep.NA = FALSE)
## median distance
sqrt((bromeliads_posit_num$num_leaf - median(bromeliads_posit_num$num_leaf, na.rm = TRUE))^2)
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
view(col_sd_add)
colnames(col_error)[6] = "maha"
brom_sd_free <- col_sd_add %>%
filter(maha<50)
bromeliads_posit_num$num_leaf
brom_posit_no_sds <-
##From here the goal is to FIND mistakes with the names (numbers)
bromeliads_set_columns %>%
count(species)
bromeliads_posit_num %>%
count(species)
R.version
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf)
bromeliads_posit_num <- bromeliads_set_columns %>%
mutate(longest_leaf = ifelse(longest_leaf < 0, -longest_leaf, longest_leaf)
,max_water = ifelse(max_water < 0, -max_water, max_water)
,num_leaf = ifelse(num_leaf < 0, -num_leaf, num_leaf))
View(bromeliads_posit_num2)
unique(test$species)
unique(bromeliads_posit_num$species)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
rlang::last_trace()
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", " ") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
View(bromeliads_posit_num)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", " ") %>%
str_replace_all(" ", "_") %>%
str_to_title) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", " ") %>%
str_replace_all(" ", "_") %>%
str_to_title) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
rlang::last_trace()
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", " ") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
str_replace_all(" ", "_") %>%
unique(bromeliads_posit_num$species)
unique(bromeliads_posit_num$species)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
library(stringr)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
bromeliads_char_swipe2 <- bromeliads_char_swipe %>%
mutate(dataset_name = dataset_name %>%
str_remove("\\.$") %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_replace_all("(?<=[a-z])(?=[0-9])", "_") %>%
str_remove("_$") %>%
str_to_title()) %>%
mutate(dataset_name = if_else(str_length(dataset_name) <= 4 &
dataset_name == "Past","Pasture", dataset_name))
View(bromeliads_char_swipe2)
unique(bromeliads_posit_num$species)
unique(bromeliads_char_swipe2$species)
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf)
bromeliads_posit_num <- bromeliads_set_columns %>%
mutate(longest_leaf = ifelse(longest_leaf < 0, -longest_leaf, longest_leaf)
,max_water = ifelse(max_water < 0, -max_water, max_water)
,num_leaf = ifelse(num_leaf < 0, -num_leaf, num_leaf))
##to test if is there any negative still,
##if there is no "Error: assert stopped execution" we did fixed the negative values
bromeliads_posit_num %>%
assert(within_bounds(0, Inf), max_water, num_leaf, longest_leaf)
unique(bromeliads_posit_num$species)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
bromeliads_char_swipe2 <- bromeliads_char_swipe %>%
mutate(dataset_name = dataset_name %>%
str_remove("\\.$") %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_replace_all("(?<=[a-z])(?=[0-9])", "_") %>%
str_remove("_$") %>%
str_to_title()) %>%
mutate(dataset_name = if_else(str_length(dataset_name) <= 4 &
dataset_name == "Past","Pasture", dataset_name))
unique(bromeliads_char_swipe2$species)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(6), max_water, error_fun = error_append)
View(sds_check)
insist(within_n_mads(6), max_water, error_fun = success_continue
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check <- bromeliads_posit_num %>%
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(6), max_water, error_fun = success_continue)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(6),error_fun = success_continue, max_water)
View(sds_check)
outliers <- attributes(sds_check)$assertr_errors[[1]][["error_df"]][["value"]]
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check <- bromeliads_posit_num %>%
insist(within_n_mads(5), max_water, error_fun = success_continue)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check2 <- bromeliads_posit_num %>%
insist(within_n_mads(5), max_water, error_fun = success_continue)
View(bromeliads_posit_num)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
sds_check <- bromeliads_posit_num %>%
insist(within_n_sds(2), max_water, error_fun = success_continue)
View(sds_check)
View(sds_check2)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds(bromeliads_char_swipe2, max_water)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds(2, max_water)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds(2)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds(2,max_water)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds(5,max_water)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds(.,5,max_water)
sds_check <- bromeliads_posit_num %>%
insist(within_n_sds(2000), max_water, error_fun = success_continue)
View(sds_check)
sds_check <- bromeliads_posit_num %>%
insist(within_n_sds(0.01), max_water, error_fun = success_continue)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds('5',max_water)
### This is the working script to pontit out the potential outliers within 5mads,
##I could find reference stating that a large bromiliad could eventualy hold 4000ml
##of water in their leaves base, so I choose to excludes this value and replace it with NA
bromeliads_posit_num %>%
within_n_sds(max_water)
sd(bromeliads_posit_num$max_water)
sd(bromeliads_posit_num$max_water, na.rm = TRUE)
sds_check <- bromeliads_posit_num %>%
insist(within_n_sds(0.01), max_water, error_fun = success_continue, na.rm = TRUE)
## median distance
sqrt((bromeliads_posit_num$num_leaf - median(bromeliads_posit_num$num_leaf, na.rm = TRUE))^2)
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
view(col_sd_add)
col_sd_add
colnames(col_error)[6] = "maha"
brom_sd_free <- col_sd_add %>%
filter(maha<50)
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
col_sd_add
View(col_sd_add)
colnames(col_error)[6]
colnames(col_sd_add)[6] = "maha"
brom_sd_free <- col_sd_add %>%
filter(maha<50)
bromeliads_posit_num$num_leaf
brom_sd_free2 <- col_sd_add %>%
ifelse(maha<50, yes)
outliers <- boxplot.stats(col_sd_add$maha)$out
## files
my_files <- list.files(path = "./data/", pattern = "*.csv", full.names = TRUE)
##import
list2env(
lapply(setNames(my_files, make.names(gsub(".*1_", "",
tools::file_path_sans_ext(my_files)))), read.csv), envir = .GlobalEnv)
##Rename
bm <- read.csv("data/bwgv1_bromeliads_messy.csv")
##Check the dataset
head(bm)
##New dataset with just the columns that I choose to work with
bromeliads_set_columns <- bm %>%
select(dataset_name, species,
max_water, num_leaf, longest_leaf)
##Check the dataset
head(bromeliads_set_columns)
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf)
bromeliads_posit_num <- bromeliads_set_columns %>%
mutate(longest_leaf = ifelse(longest_leaf < 0, -longest_leaf, longest_leaf)
,max_water = ifelse(max_water < 0, -max_water, max_water)
,num_leaf = ifelse(num_leaf < 0, -num_leaf, num_leaf))
##to test if is there any negative still,
##if there is no "Error: assert stopped execution" we did fixed the negative values
bromeliads_posit_num %>%
assert(within_bounds(0, Inf), max_water, num_leaf, longest_leaf)
unique(bromeliads_posit_num$species)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
bromeliads_char_swipe2 <- bromeliads_char_swipe %>%
mutate(dataset_name = dataset_name %>%
str_remove("\\.$") %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_replace_all("(?<=[a-z])(?=[0-9])", "_") %>%
str_remove("_$") %>%
str_to_title()) %>%
mutate(dataset_name = if_else(str_length(dataset_name) <= 4 &
dataset_name == "Past","Pasture", dataset_name))
unique(bromeliads_char_swipe2$species)
##Using mutate to change a cell with outliers
#bromeliads_posit_num2 <- bromeliads_posit_num %>%
mutate(max_water = ifelse(max_water %in% outliers, NA, max_water))
unique(test$species)
test <- sds_check %>%
mutate(new_col = "Im new") %>%
mutate(guzmania = ifelse(species == "Guzmania_sp", 1, 0)) %>%
group_by(species) %>%
mutate(avg_size = mean(num_leaf, na.rm = T)) %>%
mutate(avg_size_correct = avg_size - 1)
unique(test$species)
rte <- bromeliads_posit_num %>%
insist(success_fun = success_append, error_fun = error_report, within_n_mads(5), c(num_leaf, max_water, longest_leaf))
summary(rt)
attributes(rt)
success_report(bromeliads_posit_num$max_water)
rt <- bromeliads_posit_num %>%
insist(error_fun = error_report, within_n_mads(5), c(num_leaf, max_water, longest_leaf))
summary(rt)
help("success_and_error_functions")
within_n_mads(1)(bromeliads_posit_num$max_water)
maha_dist(bromeliads_posit_num, keep.NA = FALSE)
## median distance
sqrt((bromeliads_posit_num$num_leaf - median(bromeliads_posit_num$num_leaf, na.rm = TRUE))^2)
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
col_sd_add
view(col_sd_add)
colnames(col_sd_add)[6] = "maha"
brom_sd_free <- col_sd_add %>%
filter(maha<50)
bromeliads_posit_num$num_leaf
brom_sd_free2 <- col_sd_add %>%
ifelse(boxplot.stats(maha)$out)
outliers <- boxplot.stats(col_sd_add$maha)$out
brom_posit_no_sds <-
##From here the goal is to FIND mistakes with the names (numbers)
bromeliads_set_columns %>%
count(species)
bromeliads_posit_num %>%
count(species)
R.version
outliers <- boxplot.stats(col_sd_add$maha)$out
outliers
outliers <- which(boxplot.stats(col_sd_add$maha)$out)
brom_sd_free <- col_sd_add %>%
filter(maha == boxplot.stats(col_sd_add$maha)$out)
View(brom_sd_free)
brom_sd_free <- col_sd_add %>%
filter(maha != boxplot.stats(col_sd_add$maha)$out)
## files
my_files <- list.files(path = "./data/", pattern = "*.csv", full.names = TRUE)
##import
list2env(
lapply(setNames(my_files, make.names(gsub(".*1_", "",
tools::file_path_sans_ext(my_files)))), read.csv), envir = .GlobalEnv)
##Rename
bm <- read.csv("data/bwgv1_bromeliads_messy.csv")
##Check the dataset
head(bm)
##New dataset with just the columns that I choose to work with
bromeliads_set_columns <- bm %>%
select(dataset_name, species,
max_water, num_leaf, longest_leaf)
##Check the dataset
head(bromeliads_set_columns)
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf)
bromeliads_posit_num <- bromeliads_set_columns %>%
mutate(longest_leaf = ifelse(longest_leaf < 0, -longest_leaf, longest_leaf)
,max_water = ifelse(max_water < 0, -max_water, max_water)
,num_leaf = ifelse(num_leaf < 0, -num_leaf, num_leaf))
##to test if is there any negative still,
##if there is no "Error: assert stopped execution" we did fixed the negative values
bromeliads_posit_num %>%
assert(within_bounds(0, Inf), max_water, num_leaf, longest_leaf)
unique(bromeliads_posit_num$species)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
bromeliads_char_swipe2 <- bromeliads_char_swipe %>%
mutate(dataset_name = dataset_name %>%
str_remove("\\.$") %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_replace_all("(?<=[a-z])(?=[0-9])", "_") %>%
str_remove("_$") %>%
str_to_title()) %>%
mutate(dataset_name = if_else(str_length(dataset_name) <= 4 &
dataset_name == "Past","Pasture", dataset_name))
unique(bromeliads_char_swipe2$species)
unique(bromeliads_char_swipe$species)
unique(bromeliads_char_swipe$species) == unique(bromeliads_char_swipe2$species)
unique(bromeliads_char_swipe$dataset_name) == unique(bromeliads_char_swipe2$dataset_name)
unique(test$species)
bromeliads_posit_num$num_leaf
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
view(col_sd_add)
col_sd_add
colnames(col_sd_add)[6] = "maha"
brom_sd_free <- col_sd_add %>%
filter(maha>50)
bromeliads_posit_num$num_leaf
brom_sd_free <- col_sd_add %>%
filter(whitch(maha %in% boxplot.stats(maha)$out))
brom_sd_free <- col_sd_add %>%
filter(which(maha %in% boxplot.stats(maha)$out))
maha %in% boxplot.stats(maha)$out
(which(maha %in% boxplot.stats(maha)$out)
which(maha %in% boxplot.stats(maha)$out
which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out
which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out)
which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out)
col_sd_add[c(25, 27, 37)]
col_sd_add[c(25, 27, 37,58),]
boxplot(col_sd_add$maha)
col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out
brom_sd_free <- col_sd_add [-which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out),]
View(brom_sd_free)
View(brom_sd_free)
col_sd_add [-which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out),6]
col_sd_add [which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out),6]
col_sd_add [which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out),6] <- NA
View(brom_sd_free)
View(col_sd_add)
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
col_sd_add [which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out),3] <- NA
col_sd_add[5,3]
which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out)
col_sd_add[c(25, 27, 37,58),3]
col_sd_add [which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out),"max_water"] <- "outlier"
View(col_sd_add)
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
col_sd_add
colnames(col_sd_add)[6] = "maha"
source("~/Mestrado/Classes/data_man_800AR/data_management_880_class/challenge/challenge data man.R")
install.packages("assertr")
install.packages("devtools")
install.packages("dplyr")
install.packages("readr")
View(traits_messy)
View(ownership_messy)
View(bm)
View(abundance_messy)
source("~/Mestrado/Classes/data_man_800AR/data_management_880_class/challenge/challenge data man.R")
bromeliads_set_columns %>%
assert(within_bounds(0, Inf ), max_water, num_leaf, longest_leaf)
bromeliads_posit_num <- bromeliads_set_columns %>%
mutate(longest_leaf = ifelse(longest_leaf < 0, -longest_leaf, longest_leaf)
,max_water = ifelse(max_water < 0, -max_water, max_water)
,num_leaf = ifelse(num_leaf < 0, -num_leaf, num_leaf))
##to test if is there any negative still,
##if there is no "Error: assert stopped execution" we did fixed the negative values
bromeliads_posit_num %>%
assert(within_bounds(0, Inf), max_water, num_leaf, longest_leaf)
unique(bromeliads_posit_num$species)
bromeliads_char_swipe <- bromeliads_posit_num %>%
mutate(species = species %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_to_title()) %>%
mutate(species= case_when(str_count(species, "_") == 0 ~ paste0(species, "_sp"), TRUE ~ species))
bromeliads_char_swipe2 <- bromeliads_char_swipe %>%
mutate(dataset_name = dataset_name %>%
str_remove("\\.$") %>%
str_replace_all("\\.", "") %>%
str_replace_all(" ", "_") %>%
str_replace_all("(?<=[a-z])(?=[0-9])", "_") %>%
str_remove("_$") %>%
str_to_title()) %>%
mutate(dataset_name = if_else(str_length(dataset_name) <= 4 &
dataset_name == "Past","Pasture", dataset_name))
col_sd_add <- cbind(bromeliads_posit_num,maha_dist(bromeliads_posit_num, keep.NA = FALSE))
col_sd_add
colnames(col_sd_add)[6] = "maha"
col_sd_add [which(col_sd_add$maha %in% boxplot.stats(col_sd_add$maha)$out),"max_water"] <- NA
rom_sd_free2 <- col_sd_add %>%
#brom_sd_free2 <- col_sd_add %>%
#ifelse(boxplot.stats(maha)$out)
##After running a SDS(2) of with keeps 95% of the mesuraments
##After running a SDS(2) of with keeps 95% of the mesuraments
##I'm getting a dataset without the "outliers"
View(col_sd_add)
View(col_sd_add)
bromeliads_messy_final_version <- col_sd_add
